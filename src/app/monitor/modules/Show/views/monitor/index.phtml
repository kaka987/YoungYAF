<!DOCTYPE html>
<html>
<head>
    <title>监控展示</title>
    <meta charset=utf-8>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="css/font-awesome.css">
    <style type="text/css">
        html {
            font-family: Arial,"Microsoft YaHei","微软雅黑",sans-serif;
        }
        body {
            /*padding:0 12%;*/
        }
        i,ul,ol,li,p,div,span {
            font-style: normal;
            text-decoration: none;
            list-style: none;
            padding: 0;
            margin: 0;
        }
        table {
            max-width: 100%;
            background-color: transparent;
            border-collapse: collapse;
            border-spacing: 0;
        }
        .header {
            text-align: center;
            height:80px;
            margin-top: 50px;
        }
        .header .title {
            text-align: center;
            font-size:24px;
            font-weight: bold;
        }
        .content {
            font-size:12px;
        }
        .content .section {
            margin: 0;
        }
        .content .section .item {
            float: left;
            width: 45%;
            margin: 5px 20px 5px 15px;
            padding: 5px;
            border: 1px solid #ddd;
            min-height: 150px;
        }
        .content .section .item > .title {
            font-size:16px;
            line-height: 20px
        }
        .content .info {
            color:#4B62AD
        }
        .content .bold {
            font-weight: bold;
        }
        .content .system {
            margin-top:10px;
            color:#000;
            font-size:18px;
            font-weight: bold;
        }
        .content .section .content {
            /*margin-bottom: 10px;*/
        }
        .content .focus {
            font-weight: bold;
        }
        .content .visit {
            padding:2px 0px;
        }
        .content .tip {
            text-align: center;
        }
        .content .chart {
            width: 400px;
            height: 130px;
            text-align: center;
        }
        .content .loader {
            padding:20% 0;
        }
        #minuteChart_all{
            float: left;
            width: 40%;
            margin-right: 10px
        }
    </style>

    <script type="text/javascript" src="/static/js/jquery.min.js"></script>
    <script type="text/javascript">
        function merge(first, second) {
            for (var key in second) {
                first[key] = second[key];
            }

            return first;
        }

        function clone(item) {
            if (!item) { return item; } // null, undefined values check

            var types = [ Number, String, Boolean ],
                result;

            // normalizing primitives if someone did new String('aaa'), or new Number('444');
            //一些通过new方式建立的东东可能会类型发生变化，我们在这里要做一下正常化处理
            //比如new String('aaa'), or new Number('444')
            types.forEach(function(type) {
                if (item instanceof type) {
                    result = type( item );
                }
            });

            if (typeof result == "undefined") {
                if (Object.prototype.toString.call( item ) === "[object Array]") {
                    result = [];
                    item.forEach(function(child, index, array) {
                        result[index] = clone( child );
                    });
                } else if (typeof item == "object") {
                    // testign that this is DOM
                    //如果是dom对象，那么用自带的cloneNode处理
                    if (item.nodeType && typeof item.cloneNode == "function") {
                        var result = item.cloneNode( true );
                    } else if (!item.prototype) { // check that this is a literal
                        // it is an object literal
                        //如果是个对象迭代的话，我们可以用for in 迭代来赋值
                        result = {};
                        for (var i in item) {
                            result[i] = clone( item[i] );
                        }
                    } else {
                        // depending what you would like here,
                        // just keep the reference, or create new object
                        //这里解决的是带构造函数的情况，这里要看你想怎么复制了，深得话，去掉那个false && ，浅的话，维持原有的引用，
                        //但是我不建议你去new一个构造函数来进行深复制，具体原因下面会解释
                        if (false && item.constructor) {
                            // would not advice to do that, reason? Read below
                            //朕不建议你去new它的构造函数
                            result = new item.constructor();
                        } else {
                            result = item;
                        }
                    }
                } else {
                    result = item;
                }
            }

            return result;
        }
    </script>
</head>
<body>
<div class="content">
    <div class="section">
        <div class="item">
            <div class="info bold title">伦敦</div>
            <div class="content">
                <div class="chart" id="minuteChart_LON"><img class="loader" src="/static/images/ajax-loader.gif" /></div>
            </div>
        </div>
        <div class="item">
            <div class="info bold title">美东</div>
            <div class="content">
                <div class="chart" id="minuteChart_IAD"><img class="loader" src="/static/images/ajax-loader.gif" /></div>
            </div>
        </div>
        <div class="item">
            <div class="info bold title">美西</div>
            <div class="content">
                <div class="chart" id="minuteChart_NCA"><img class="loader" src="/static/images/ajax-loader.gif" /></div>
            </div>
        </div>
        <div class="item">
            <div class="info bold title">新加坡</div>
            <div class="content">
                <div class="chart" id="minuteChart_SIN"><img class="loader" src="/static/images/ajax-loader.gif" /></div>
            </div>
        </div>
        <div class="item">
            <div class="info bold title">南美</div>
            <div class="content">
                <div class="chart" id="minuteChart_SP"><img class="loader" src="/static/images/ajax-loader.gif" /></div>
            </div>
        </div>
        <div class="item">
            <h1 style="color:#4B62AD;">运维全球事实监控大盘(全球总请求量)</h1>
            <div class="content" style="  color: #2E75B6;font-size: 20px;padding: 20px 20px;">
                <div id="minuteChart_all">昨天：<span id="yesterdayNum"></span></div>
                <div id="minuteChart_all">今天：<span id="todayNum"></span></div>
            </div>
        </div>
    </div>
</div>
<input type="hidden" id="yestDay" timeString="<?php echo strtotime(date('Y-m-d', strtotime("-1 day")));?>" value="<?php echo date('Y-m-d', strtotime("-1 day"));?>" />
<input type="hidden" id="toDay" value="<?php echo date('Y-m-d', time());?>" />
<input type="hidden" id="sys-yesterday-allnum" value="0" />
<input type="hidden" id="sys-today-allnum" value="0" />
<script type="text/javascript" src="/static/js/highcharts/highcharts.js"></script>
<script type="text/javascript">
var math = Math,
    mathAbs = math.abs;
function formatNumber(number, decimals, decPoint, thousandsSep) {
    n = +number || 0,
        c = decimals === -1 ?
            (n.toString().split('.')[1] || '').length : // preserve decimals
            (isNaN(decimals = mathAbs(decimals)) ? 2 : decimals),
        d = decPoint === undefined ? '.' : decPoint,
        t = thousandsSep === undefined ? ',' : thousandsSep,
        s = n < 0 ? "-" : "",
        i = String(parseInt(n = mathAbs(n).toFixed(c))),
        j = i.length > 3 ? i.length % 3 : 0;

    return s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) +
        (c ? d + mathAbs(n - i).toFixed(c).slice(2) : "");
}

function formatDate(now, format)   {
    var year   = now.getYear();
    var month  = now.getMonth()+1;
    var date   = now.getDate();
    var hour   = now.getHours();
    var minute = now.getMinutes();
    var second = now.getSeconds();

    if (hour < 9) hour = "0"+ hour;
    if (minute < 9) minute = "0"+ minute;
    if (second < 9) second = "0"+ second;

    format = format.replace('Y', year);
    format = format.replace('m', month);
    format = format.replace('d', date);
    format = format.replace('H', hour);
    format = format.replace('i', minute);
    format = format.replace('s', second);

    return format;
}
$(function () {
    Highcharts.setOptions({
        global: {
            useUTC: false
        },
        lang: {
            numericSymbols: null
        },
        credits: {
            enabled: false
        },
        series: {
            showInLegend: false
        }
    });

    var chartOption = {
        "chart": {
            "width": 400,
            "height": 130,
            "type": "column"
        },
        "title": {
            "text": null
        },
        "subtitle": {
            "text": ""
        },
        "xAxis": {
            "title": null
        },
        "yAxis": {
            "title": null,
            "labels": {
                "enabled": false
            },
            "gridLineWidth": 0
        },
        "plotOptions": {
            "column": {
                "dataLabels": {
                    "enabled": true
                },
                "pointWidth": 30
            }
        },
        "tooltip": {
            "valueSuffix": "次"
        },
        "legend": false
    };

    var minuteChart_LON = null;
    var minuteChart_IAD = null;
    var minuteChart_NCA = null;
    var minuteChart_SIN = null;
    var minuteChart_SP  = null;
    var yestDay = null;
    var toDay = null;

    var lon_chart = function () {
        var option = clone(chartOption);

        option.chart.renderTo = 'minuteChart_LON';

        var json = $.ajax({
            url: "http://162.13.3.53/reportapi/accesslog/NumberOfNode",
            dataType: "json",
            success: function (json) {
                var series = json['data']['series'];

                option['xAxis']['categories'] = [];
                option['series'] = [{
                    'data': [],
                    'name': 'lon.monitor.dy'
                }];

                for (var table in series) {
                    option['xAxis']['categories'].push(table.slice(-3));
                    option['series'][0]['data'].push(series[table]);
                }

                minuteChart_LON = new Highcharts.Chart(option);
            }
        });
    };

    var iad_chart = function () {
        var option = clone(chartOption);
        option.chart.renderTo = 'minuteChart_IAD';

        var json = $.ajax({
            url: "http://54.88.187.45/reportapi/accesslog/NumberOfNode",
            dataType: "json",
            success: function (json) {
                var series = json['data']['series'];

                option['xAxis']['categories'] = [];
                option['series'] = [{
                    'data': [],
                    'name': 'iad.monitor.dy'
                }];

                for (var table in series) {
                    option['xAxis']['categories'].push(table.slice(-3));
                    option['series'][0]['data'].push(series[table]);
                }

                minuteChart_IAD = new Highcharts.Chart(option);
            }
        });
    };

    var nca_chart = function () {
        var option = clone(chartOption);
        option.chart.renderTo = 'minuteChart_NCA';

        var json = $.ajax({
            url: "http://54.193.28.158/reportapi/accesslog/NumberOfNode",
            dataType: "json",
            success: function (json) {
                var series = json['data']['series'];

                option['xAxis']['categories'] = [];
                option['series'] = [{
                    'data': [],
                    'name': 'nca.monitor.dy'
                }];

                for (var table in series) {
                    option['xAxis']['categories'].push(table.slice(-3));
                    option['series'][0]['data'].push(series[table]);
                }

                minuteChart_NCA = new Highcharts.Chart(option);
            }
        });
    };

    var sin_chart = function () {
        var option = clone(chartOption);
        option.chart.renderTo = 'minuteChart_SIN';

        var json = $.ajax({
            url: "http://54.179.179.179/reportapi/accesslog/NumberOfNode",
            dataType: "json",
            success: function (json) {
                var series = json['data']['series'];

                option['xAxis']['categories'] = [];
                option['series'] = [{
                    'data': [],
                    'name': 'sin.monitor.dy'
                }];

                for (var table in series) {
                    option['xAxis']['categories'].push(table.slice(-3));
                    option['series'][0]['data'].push(series[table]);
                }

                minuteChart_SIN = new Highcharts.Chart(option);
            }
        });
    };

    var sp_chart = function () {
        var option = clone(chartOption);
        option.chart.renderTo = 'minuteChart_SP';

        var json = $.ajax({
            url: "http://54.94.211.177/reportapi/accesslog/NumberOfNode",
            dataType: "json",
            success: function (json) {
                var series = json['data']['series'];

                option['xAxis']['categories'] = [];
                option['series'] = [{
                    'data': [],
                    'name': 'sp.monitor.dy'
                }];

                for (var table in series) {
                    option['xAxis']['categories'].push(table.slice(-3));
                    option['series'][0]['data'].push(series[table]);
                }

                minuteChart_SP = new Highcharts.Chart(option);
            }
        });
    };

    var yesterday_num = function () {

        var y = $('#sys-yesterday-allnum').val();
        if (y != '0') {
            //$('#yesterdayNum').text(y);
            return true;
        }

        var areas  = [{'name': 'sin', 'host': '54.179.179.179'},
            {'name': 'iad', 'host': '54.88.187.45'},
            {'name': 'nca', 'host': '54.193.28.158'},
            {'name': 'lon', 'host': '162.13.3.53'},
            {'name': 'sp', 'host': '54.94.211.177'}];
        var process = 0,
            totalNum = 0,
            totalErr = 0,
            returns;

        //昨天总量
        for (var i in areas) {

            var area = areas[i];
            var yUrl = 'http://'+ area.host +'/api/analytics/accessNumber?index=pv,error&from='+ yestDay +'&to=' + toDay;
            var tUrl = 'http://'+ area.host +'/api/analytics/accessNumber?index=pv,error&from='+ toDay;

            $.ajax({
                url: yUrl,
                dataType: 'json',
                async : true,
                success: function(res) {
                    var num    = Number(res.data.series.pv);
                    //var err    = Number(res.data.series.error);
                    process++;
                    totalNum += num;
                    if (process == areas.length) {
                        //console.log(formatNumber(totalNum, 0));
                        $('#sys-yesterday-allnum').val(formatNumber(totalNum, 0));
                        $('#yesterdayNum').text(formatNumber(totalNum, 0));
                        //$('.sys-all.sys-err').text(formatNumber(totalErr, 0));
                    }
                }
            });
        }


    };

    //今天总量
    var today_num = function () {

        var areas  = [{'name': 'sin', 'host': '54.179.179.179'},
            {'name': 'iad', 'host': '54.88.187.45'},
            {'name': 'nca', 'host': '54.193.28.158'},
            {'name': 'lon', 'host': '162.13.3.53'},
            {'name': 'sp', 'host': '54.94.211.177'}];
        var process = 0,
            totalNum = 0,
            totalErr = 0,
            returns;

        for (var i in areas) {

            var area = areas[i];
            var tUrl = 'http://'+ area.host +'/api/analytics/accessNumber?index=pv,error&from='+ toDay;

            $.ajax({
                url: tUrl,
                dataType: 'json',
                async : true,
                success: function(res) {
                    var num    = Number(res.data.series.pv);
                    process++;
                    totalNum += num;
                    if (process == areas.length) {
                        //console.log(formatNumber(totalNum, 0));
                        $('#todayNum').text(formatNumber(totalNum, 0));
                    }
                }
            });
        }
    };

    yestDay = $('#yestDay').val();
    toDay = $('#toDay').val();
    var chart_init = function() {
        lon_chart();
        iad_chart();
        nca_chart();
        sin_chart();
        sp_chart();
    };
    var num_init = function() {
        var curTime = Math.round(new Date().getTime()/1000);
        var yesTime = $('#yestDay').attr('timeString');
        console.log(curTime-yesTime,86400*2+1000);
        if ((curTime-yesTime)>=(86400*2+1000)) {
            location.reload();
        }
        yesterday_num();
        today_num();
    };

    (function() {
        chart_init();
        num_init();
        setInterval(chart_init, 60*1000);
        setInterval(num_init, 300*1000);
        //setTimeout(arguments.callee, 86400*1000);
    })();

});

//        setTimeout(function(){
//            location.reload();
//        }, 60000);
</script>
</body>
</html>